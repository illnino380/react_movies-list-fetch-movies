{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","onAdd","useState","setMovie","movieTitleQuery","setMovieTitleQuery","isError","setIsError","isLoadingMovie","setIsLoadingMovie","onSubmit","event","query","preventDefault","fetch","then","res","json","catch","Response","Error","newMovie","Title","Plot","Poster","imdbID","finally","htmlFor","type","id","placeholder","value","onChange","target","classNames","disabled","onClick","App","setMovies","currentMovie","some","currentMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.291384ce.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl === 'N/A'\n            ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n            : movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import {\n  ChangeEvent, FC, FormEvent, useState,\n} from 'react';\nimport classNames from 'classnames';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\ninterface Props {\n  onAdd: (movie: Movie) => void,\n}\n\nexport const FindMovie: FC<Props> = ({ onAdd }) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [movieTitleQuery, setMovieTitleQuery] = useState('');\n  const [isError, setIsError] = useState(false);\n  const [isLoadingMovie, setIsLoadingMovie] = useState(false);\n\n  const clearForm = () => {\n    setMovie(null);\n    setMovieTitleQuery('');\n    setIsError(false);\n  };\n\n  const handleSubmit = (event: FormEvent) => {\n    event.preventDefault();\n    setIsLoadingMovie(true);\n\n    getMovie(movieTitleQuery)\n      .then(res => {\n        if ('Error' in res) {\n          setIsError(true);\n        } else {\n          const newMovie = {\n            title: res.Title,\n            description: res.Plot,\n            imgUrl: res.Poster,\n            imdbUrl: `https://www.imdb.com/title/${res.imdbID}`,\n            imdbId: res.imdbID,\n          };\n\n          setMovie(newMovie);\n        }\n      })\n      .finally(() => setIsLoadingMovie(false));\n  };\n\n  const handleSearchTitleInput = (event: ChangeEvent<HTMLInputElement>) => {\n    setMovieTitleQuery(event.target.value);\n    setIsLoadingMovie(false);\n    setIsError(false);\n  };\n\n  const handleAddButton = () => {\n    if (movie !== null) {\n      onAdd(movie);\n      clearForm();\n    }\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={movieTitleQuery}\n              onChange={handleSearchTitleInput}\n            />\n          </div>\n\n          {isError\n           && (\n             <p className=\"help is-danger\" data-cy=\"errorMessage\">\n               Can&apos;t find a movie with such a title\n             </p>\n           )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button is-light',\n                { 'is-loading': isLoadingMovie },\n              )}\n              disabled={movieTitleQuery === ''}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {movieTitleQuery && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddButton}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie !== null && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=53612ab';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addFoundMovieToList = (currentMovie: Movie) => {\n    const isInMovieList = movies\n      .some(movie => movie.imdbId === currentMovie.imdbId);\n\n    if (!isInMovieList) {\n      setMovies(currentMovies => [...currentMovies, currentMovie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie onAdd={addFoundMovieToList} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}